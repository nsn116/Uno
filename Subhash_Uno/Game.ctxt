#BlueJ class context
comment0.params=
comment0.target=java.lang.String\ backgroundInterface()
comment0.text=\n\ backgroundInterface\ is\ a\ method\ that\ builds\ up\ the\ interface\ of\ the\ game.\n\n\ @return\ the\ String\ value\ based\ on\ which\ the\ game\ starts\ or\ ends.\ If\ the\ String\ is\ a\ no\ then\ the\ game\ stops\ then\ and\ there.\ Anything\ else\ will\ lead\ to\ start\ of\ the\ game.\ \ \ \n
comment1.params=s
comment1.target=void\ slowPrint(java.lang.String)
comment1.text=\n\ slowPrint\ prints\ the\ String\ passed\ to\ it\ slowly\ with\ a\ gap\ of\ 1/10th\ of\ a\ second\ between\ each\ character.\n\ \n\ @param\ s\ the\ String\ to\ be\ printed\ at\ a\ speed\ of\ 1/10th\ of\ a\ second.\n
comment10.params=args
comment10.target=void\ main(java.lang.String[])
comment10.text=\n\ The\ main\ method\ is\ the\ site\ of\ all\ execution.\n
comment2.params=s
comment2.target=void\ slowPrintOl1(java.lang.String)
comment2.text=\n\ slowPrintOl1\ is\ the\ overloaded\ version\ of\ slowPrint\ which\ prints\ the\ String\ passed\ to\ it\ slowly\ with\ a\ gap\ of\ 1/500th\ of\ a\ second\ between\ each\ character.\n\ \n\ @param\ s\ the\ string\ to\ be\ printed\ at\ a\ speed\ of\ 1/500th\ of\ a\ second.\n
comment3.params=
comment3.target=void\ intro()
comment3.text=\n\ intro\ is\ a\ method\ that\ gives\ the\ introduction\ to\ the\ game\ and\ prints\ the\ rules\ for\ the\ user\ if\ the\ user\ wants.\ \n\ \ \ \ \ \ \ \n
comment4.params=
comment4.target=void\ additionalRules()
comment4.text=\n\ additionalRules\ is\ a\ method\ in\ which\ some\ rules\ that\ have\ to\ be\ printed\ for\ the\ user\ as\ they\ are\ required\ for\ playing\ the\ Game\ of\ Uno\ on\ the\ computer,\ are\ printed.\n\n
comment5.params=
comment5.target=void\ printDivide()
comment5.text=\n\ printDivide\ is\ method\ which\ divides\ the\ user\ interface\ using\ a\ barrier\ of\ underscores\ to\ separate\ the\ play\ field\ fromthe\ introductory\ space.\n\ \n
comment6.params=
comment6.target=void\ rules()
comment6.text=\n\ rules\ is\ a\ method\ that\ prints\ all\ the\ rules\ of\ The\ Game\ Of\ UNO.\n\n
comment7.params=n
comment7.target=java.lang.String\ sayUno(int)
comment7.text=\n\ sayUno\ decides\ whether\ to\ say\ 'uno'\ or\ not,\ based\ on\ a\ random\ integer\ it\ receives\ from\ the\ randomInt\ method\ in\ the\ Deck\ class\ and\ the\ difficulty\ level\ chosen\ by\ the\ user.\n\ \n\ @param\ n\ the\ integer\ which\ is\ passed\ to\ the\ sayUno\ method\ based\ on\ the\ difficulty\ level\ using\ which\ the\ method\ returns\ the\ String\ "uno"\ or\ returns\ "".\n\ @return\ the\ String\ which\ either\ contains\ "uno"\ or\ nothing\ in\ it\ ("").\n
comment8.params=n
comment8.target=java.lang.String\ colour(int)
comment8.text=\n\ colour\ returns\ the\ colour\ of\ the\ card\ the\ computer\ wishes\ to\ play\ provided\ the\ card\ is\ not\ a\ Wild\ or\ a\ Wild\ Draw\ 4.\n\ \n\ @param\ n\ the\ colour\ of\ the\ Uno\ card\ played\ by\ the\ computer\ encoded\ in\ the\ form\ of\ an\ integer.\ \n\ @return\ the\ colour\ of\ the\ card\ in\ the\ form\ of\ a\ String.\n
comment9.params=
comment9.target=void\ startPlay()
comment9.text=\n\ startPlay\ method\ is\ the\ method\ where\ all\ the\ classes\ made\ are\ used\ and\ their\ methods\ are\ invoked\ to\ make\ a\ proper\ command-based\ stimulation\ of\ the\ Game\ Of\ Uno.\n\ \n
numComments=11
