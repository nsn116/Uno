#BlueJ class context
comment0.params=
comment0.target=Uno()
comment0.text=\n\ Default\ constructor\ for\ the\ Uno\ class\ which\ initializes\ Uno\ cards\ by\ initializing\ their\ instance\ variables.\n
comment1.params=colour\ rank
comment1.target=Uno(int,\ int)
comment1.text=\n\ Parameterized\ Constructor\ for\ objects\ of\ the\ Uno\ class\ which\ initializes\ Uno\ cards\ by\ initializing\ their\ instance\ variables\ as\ per\ the\ parameters\ given.\ \n\ \n\ @param\ colour\ colour\ of\ the\ Uno\ Card\n\ @param\ rank\ rank\ of\ the\ Uno\ Card.\n\ \n
comment10.params=deck
comment10.target=Deck\ makeUsedPile(Deck)
comment10.text=\n\ makeUsedPile\ adds\ this\ Uno\ card\ to\ the\ played\ pile\ to\ make\ a\ new\ played\ pile.\n\ \n\ @param\ deck\ the\ previous\ played\ pile\ to\ which\ this\ Uno\ card\ is\ to\ be\ added.\n\ @return\ a\ new\ played\ pile\ in\ the\ form\ of\ a\ Deck\ object.\n
comment11.params=s
comment11.target=Uno\ parseCard(java.lang.String)
comment11.text=\n\ parseCard\ takes\ a\ String\ and\ returns\ the\ corresponding\ card.\n\ \n\ @param\ s\ the\ card\ written\ in\ common\ English\ tongue.\n\ @return\ an\ Uno\ card\ based\ on\ the\ String\ passed\ to\ it,\ if\ it\ is\ valid\ and\ null\ if\ otherwise.\n
comment12.params=deck
comment12.target=int[]\ colourHist(Uno[])
comment12.text=\n\ colourHist\ returns\ a\ histogram\ of\ colours\ of\ the\ deck\ of\ Uno\ cards\ that\ is\ passed\ as\ a\ parameter\ to\ it.\n\ \n\ @param\ deck\ the\ deck\ of\ Uno\ cards\ whose\ histogram\ of\ colours\ is\ to\ be\ returned.\n\ @return\ a\ histogram\ of\ the\ colours\ of\ Uno\ cards\ in\ the\ array\ of\ Uno[]\ cards\ passed\ to\ it\ as\ a\ parameter.\n
comment2.params=
comment2.target=void\ printCard()
comment2.text=\n\ printCard\ prints\ this\ Uno\ card\ in\ a\ user\ friendly\ format.\n
comment3.params=c
comment3.target=boolean\ equalColour(Uno)
comment3.text=\n\ equalColour\ checks\ if\ this\ Uno\ card\ has\ the\ same\ colour\ as\ the\ card\ passed\ to\ it\ as\ a\ parameter.\n\ \n\ @param\ c\ the\ card\ passed\ as\ a\ parameter\ whose\ colour\ is\ to\ be\ checked\ with\ this\ Uno\ card.\ \n\ @return\ true\ if\ the\ colours\ of\ the\ cards\ are\ equal\ and\ false,\ if\ otherwise.\n
comment4.params=c
comment4.target=boolean\ equalRank(Uno)
comment4.text=\n\ equalRank\ checks\ if\ this\ Uno\ card\ has\ the\ same\ rank\ as\ the\ card\ passed\ to\ it\ as\ a\ parameter.\n\ \n\ @param\ c\ the\ card\ passed\ as\ a\ parameter\ whose\ rank\ is\ to\ be\ checked\ with\ this\ Uno\ card.\ \n\ @return\ true\ if\ the\ ranks\ of\ the\ cards\ are\ equal\ and\ false,\ if\ otherwise.\n
comment5.params=deck
comment5.target=int\ findIndexOfCard(Uno[])
comment5.text=\n\ findCard\ finds\ this\ Uno\ card\ in\ a\ deck\ of\ Uno\ cards\ and\ returns\ its\ index\ and\ 0,\ if\ otherwise.\n\ \n\ @param\ deck\ the\ deck\ in\ which\ this\ Uno\ card\ is\ to\ be\ searched\ for.\n\ @return\ the\ index\ of\ the\ this\ Uno\ card\ in\ the\ array\ of\ Uno\ cards.\n
comment6.params=c
comment6.target=boolean\ sameCard(Uno)
comment6.text=\n\ sameCard\ checks\ if\ this\ Uno\ card\ is\ the\ same\ as\ the\ card\ passed\ to\ it\ as\ a\ parameter.\n\ \n\ @param\ c\ the\ card\ with\ which\ this\ Uno\ card\ is\ to\ be\ compared\ with\ and\ checked\ if\ they\ are\ the\ same\ or\ not.\n\ @return\ true\ if\ the\ two\ cards\ are\ the\ same\ and\ false\ if\ they\ are\ not\ the\ same.\n
comment7.params=c
comment7.target=int\ compareCard(Uno)
comment7.text=\n\ compareCard\ is\ a\ method\ that\ compares\ two\ cards\ and\ returns\ 1\ if\ this\ Uno\ card\ is\ greater\ than\ another\ card\ and\ -1\ if\ the\ second\ card\ \n\ is\ greater\ than\ this\ Uno\ card\ and\ 0\ if\ they\ are\ equal.\n\ \n\ @param\ c\ the\ card\ which\ is\ to\ be\ compared\ with\ this\ Uno\ card.\n\ @return\ 1\ if\ this\ Uno\ card\ has\ a\ greater\ rank\ or\ colour\ than\ c\ or\ -1\ if\ it\ is\ vice\ versa\ or\ 0\ if\ they\ are\ the\ same.\ \n
comment8.params=
comment8.target=boolean\ isWild()
comment8.text=\n\ isWild\ checks\ if\ this\ Uno\ card\ is\ a\ wild\ or\ not.\n\n\ @return\ true\ if\ this\ Uno\ card\ is\ a\ wild\ and\ false,\ if\ otherwise.\n
comment9.params=
comment9.target=boolean\ isWildDraw4()
comment9.text=\n\ isWildDraw4\ checks\ if\ this\ Uno\ card\ is\ a\ wild\ draw\ 4\ or\ not.\n\n\ @return\ true\ if\ this\ Uno\ card\ is\ a\ wild\ draw\ 4\ and\ false,\ if\ otherwise.\n
numComments=13
